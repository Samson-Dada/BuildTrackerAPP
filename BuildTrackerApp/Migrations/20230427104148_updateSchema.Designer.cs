// <auto-generated />
using System;
using BuildTrackerApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BuildTrackerApp.Migrations
{
    [DbContext(typeof(BuildAppContext))]
    [Migration("20230427104148_updateSchema")]
    partial class updateSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BuildTrackerApp.Models.Blocker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BlockerStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Blockers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlockerStatus = 1,
                            CreatedTime = new DateTime(2023, 4, 27, 11, 41, 48, 69, DateTimeKind.Local).AddTicks(9251),
                            Description = "Unable to found package you are using",
                            Priority = 1,
                            Role = 0,
                            ShortDescription = "Packege not supported",
                            Title = "Error code"
                        },
                        new
                        {
                            Id = 2,
                            BlockerStatus = 4,
                            CreatedTime = new DateTime(2023, 4, 27, 11, 41, 48, 69, DateTimeKind.Local).AddTicks(9254),
                            Description = "Testing fail due to logical error that the function return",
                            Priority = 1,
                            Role = 0,
                            ShortDescription = "Testing fail",
                            Title = "Test"
                        });
                });

            modelBuilder.Entity("BuildTrackerApp.Models.Build", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CloseTask")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpenTask")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Builds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CloseTask = 6,
                            CreatedTime = new DateTime(2023, 4, 27, 11, 41, 48, 69, DateTimeKind.Local).AddTicks(9229),
                            Description = "new post request that send data to the list of build",
                            OpenTask = 5,
                            Role = 0,
                            ShortDescription = "New post method",
                            Title = "Add new method"
                        },
                        new
                        {
                            Id = 2,
                            CloseTask = 2,
                            CreatedTime = new DateTime(2023, 4, 27, 11, 41, 48, 69, DateTimeKind.Local).AddTicks(9246),
                            Description = "new UI for customer to view number of sales ",
                            OpenTask = 6,
                            Role = 3,
                            ShortDescription = "New UI for customer",
                            Title = "new UI"
                        });
                });

            modelBuilder.Entity("BuildTrackerApp.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Task")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "johnd@harmonica.com",
                            FirstName = "John",
                            ImageUrl = "",
                            LastName = "Deo",
                            ProductRole = "Team Lead",
                            Role = "Product Manager",
                            Status = true,
                            Task = "Scrum Master"
                        },
                        new
                        {
                            Id = 2,
                            Email = "pablos@harmonica.com",
                            FirstName = "Pablo",
                            ImageUrl = "",
                            LastName = "Seun",
                            ProductRole = "Agile Team",
                            Role = "Backend Engineer",
                            Status = true,
                            Task = "Web APIs"
                        },
                        new
                        {
                            Id = 3,
                            Email = "cayoteb@harmonica.com",
                            FirstName = "Cayote",
                            ImageUrl = "",
                            LastName = "Bola",
                            ProductRole = "Agile Team",
                            Role = "Product Desginer",
                            Status = false,
                            Task = "Design UI & UX"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
